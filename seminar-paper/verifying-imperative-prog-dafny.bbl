\begin{thebibliography}{}

\bibitem[Chakarov et~al., 2022]{Chakarov2022}
Chakarov, A., Fedchin, A., Rakamaric, Z., and Rungta, N. (2022).
\newblock Better counterexamples for dafny.

\bibitem[Herbert et~al., 2012]{Herbert2012}
Herbert, L., Leino, K. R.~M., and Quaresma, J. (2012).
\newblock {\em Using Dafny, an Automatic Program Verifier}, pages 156--181.
\newblock Springer Berlin Heidelberg, Berlin, Heidelberg.

\bibitem[Leino, 2023]{leino2023program}
Leino, K. R.~M. (2023).
\newblock {\em Program Proofs}.
\newblock MIT Press.

\bibitem[Li et~al., 2025]{li2025dafnyverificationawareintermediatelanguage}
Li, Y.~C., Zetzsche, S., and Somayyajula, S. (2025).
\newblock Dafny as verification-aware intermediate language for code generation.

\bibitem[Reid et~al., 2020]{reid2020makingformalmethodsnormal}
Reid, A., Church, L., Flur, S., de~Haas, S., Johnson, M., and Laurie, B. (2020).
\newblock Towards making formal methods normal: meeting developers where they are.

\bibitem[Álvaro Silva et~al., 2024]{silva2024leveraginglargelanguagemodels}
Álvaro Silva, Mendes, A., and Ferreira, J.~F. (2024).
\newblock Leveraging large language models to boost dafny's developers productivity.

\end{thebibliography}
